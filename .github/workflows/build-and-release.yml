name: Build and Release

on:
  push:
    tags:
      - '0*'

jobs:
  build-linux:
    name: Build and Package on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true
  
    - name: Build
      run: cargo build --release --target x86_64-unknown-linux-gnu
  
    - name: Compress Linux Binary
      run: tar -czvf depscop-linux-${{ github.ref_name }}.tar.gz -C target/x86_64-unknown-linux-gnu/release depscop
  
    - name: Upload Artifact (Tarball)
      uses: actions/upload-artifact@v2
      with:
        name: depscop-linux-${{ github.ref_name }}.tar.gz
        path: depscop-linux-${{ github.ref_name }}.tar.gz
  
    - name: Create DEB Package Structure
      run: |
        mkdir -p depscop-deb/DEBIAN
        mkdir -p depscop-deb/usr/local/bin
        cp target/x86_64-unknown-linux-gnu/release/depscop depscop-deb/usr/local/bin
  
    - name: Create DEB Control File
      run: |
        echo "Package: depscop" > depscop-deb/DEBIAN/control
        echo "Version: ${{ github.ref_name }}" >> depscop-deb/DEBIAN/control
        echo "Section: base" >> depscop-deb/DEBIAN/control
        echo "Priority: optional" >> depscop-deb/DEBIAN/control
        echo "Architecture: amd64" >> depscop-deb/DEBIAN/control
        echo "Maintainer: Enrique <enrique@ortuno.net>" >> depscop-deb/DEBIAN/control
        echo "Description: A useful tool for analyzing dependencies" >> depscop-deb/DEBIAN/control
  
    - name: Build DEB Package
      run: dpkg-deb --build depscop-deb
        # mv depscop-deb.deb depscop-${{ github.ref_name }}.deb
  
    - name: Upload DEB Artifact
      uses: actions/upload-artifact@v2
      with:
        name: depscop-${{ github.ref_name }}.deb
        path: depscop-deb.deb

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-gnu
        override: true
    - name: Build
      run: cargo build --release --target x86_64-pc-windows-gnu
    - name: Compress Windows Binary
      run: 7z a depscop-windows-${{ github.ref_name }}.zip ./target/x86_64-pc-windows-gnu/release/depscop.exe
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: depscop-windows-${{ github.ref_name }}.zip
        path: depscop-windows-${{ github.ref_name }}.zip

  build-macos:
    name: Build on macOS for Intel and Apple Silicon
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust target for x86_64
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-apple-darwin
        override: true
    - name: Install Rust target for ARM
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true
    - name: Build for x86_64
      run: cargo build --release --target x86_64-apple-darwin
    - name: Build for ARM
      run: cargo build --release --target aarch64-apple-darwin
    - name: Compress macOS Binaries
      run: |
        zip -j depscop-macos-x86_64-${{ github.ref_name }}.zip ./target/x86_64-apple-darwin/release/depscop
        zip -j depscop-macos-arm64-${{ github.ref_name }}.zip ./target/aarch64-apple-darwin/release/depscop
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: depscop-macos-${{ github.ref_name }}
        path: |
          depscop-macos-x86_64-${{ github.ref_name }}.zip
          depscop-macos-arm64-${{ github.ref_name }}.zip

  release:
    name: Release
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
  
      - name: Download All Artifacts
        uses: actions/download-artifact@v2
        with:
          path: downloaded-artifacts
  
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            downloaded-artifacts/depscop-linux-${{ github.ref_name }}.tar.gz/*
            downloaded-artifacts/depscop-deb.deb/*
            downloaded-artifacts/depscop-macos-${{ github.ref_name }}/*
            downloaded-artifacts/depscop-windows-${{ github.ref_name }}.zip/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: 'Release version ${{ github.ref_name }}'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_RELEASE }}
