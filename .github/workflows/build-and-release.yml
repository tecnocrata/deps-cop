name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true
    - name: Build
      run: cargo build --release --target x86_64-unknown-linux-gnu
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: deps_cop-linux
        path: target/x86_64-unknown-linux-gnu/release/deps_cop

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-gnu
        override: true
    - name: Build
      run: cargo build --release --target x86_64-pc-windows-gnu
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: deps_cop-windows.exe
        path: target/x86_64-pc-windows-gnu/release/deps_cop.exe

  build-macos:
    name: Build on macOS for Intel and Apple Silicon
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust target for x86_64
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-apple-darwin
        override: true
    - name: Install Rust target for ARM
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true
    - name: Build for x86_64
      run: cargo build --release --target x86_64-apple-darwin
    - name: Build for ARM
      run: cargo build --release --target aarch64-apple-darwin
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: deps_cop-macos
        path: |
          target/x86_64-apple-darwin/release/deps_cop
          target/aarch64-apple-darwin/release/deps_cop

  release:
      needs: [build-linux, build-windows, build-macos]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Extract version from tag
          run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

        - name: Download Linux artifact
          uses: actions/download-artifact@v2
          with:
            name: deps_cop-linux

        - name: Download Windows artifact
          uses: actions/download-artifact@v2
          with:
            name: deps_cop-windows.exe

        - name: Download macOS artifact
          uses: actions/download-artifact@v2
          with:
            name: deps_cop-macos

        - name: Create Release
          uses: softprops/action-gh-release@v2
          with:
            files: |
              deps_cop-linux/deps_cop
              deps_cop-windows.exe/deps_cop.exe
              deps_cop-macos/deps_cop
            tag_name: ${{ env.VERSION }}
            name: Release ${{ env.VERSION }}
            body: 'Release version ${{ env.VERSION }}'
          env:
            GITHUB_TOKEN: ${{ secrets.PAT_RELEASE }}
